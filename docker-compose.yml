version: '3'

networks:
  todo-network:
    driver: bridge  # Changed from external: true

volumes:
  postgres_data:
  mongodb_data:
  mysql_data:
  traefik_certificates:

services:
  traefik:
    image: traefik:v2.9
    container_name: todo-traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/dynamic_conf.yaml:/etc/traefik/dynamic_conf.yaml
      - ./traefik/certificates:/certificates
    networks:
      - todo-network
    command:
      - "--api=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--providers.file.filename=/etc/traefik/dynamic_conf.yaml"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=onasanwoolasubomi@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/certificates/acme.json"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"

  frontend:
    build: ./frontend
    container_name: todo-frontend
    ports:
      - "8080:80"  # Added port mapping
    networks:
      - todo-network
    depends_on:
      - auth-api
      - todos-api
      - users-api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  auth-api:
    build: ./auth-api
    container_name: todo-auth-api
    ports:
      - "8081:8081"  # Added port mapping
    environment:
      - AUTH_API_PORT=8081
      - JWT_SECRET=myfancysecret
      - USERS_API_ADDRESS=http://users-api:8083
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=auth_db
    depends_on:
      - postgres
      - users-api
    networks:
      - todo-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`auth.localhost`)"
      - "traefik.http.routers.auth.entrypoints=websecure"
      - "traefik.http.routers.auth.tls.certresolver=myresolver"
      - "traefik.http.services.auth.loadbalancer.server.port=8081"

  todos-api:
    build: ./todos-api
    container_name: todo-todos-api
    ports:
      - "8082:8082"  # Added port mapping
    environment:
      - JWT_SECRET=myfancysecret
      - MONGO_URI=mongodb://mongodb:27017/todos
      - AUTH_API_URL=http://auth-api:8081
      - REDIS_HOST=redis  # Changed from redis-queue to match service name
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    depends_on:
      - mongodb
      - auth-api
      - redis
    networks:
      - todo-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todos.rule=Host(`todos.localhost`)"
      - "traefik.http.routers.todos.entrypoints=websecure"
      - "traefik.http.routers.todos.tls.certresolver=myresolver"
      - "traefik.http.services.todos.loadbalancer.server.port=8082"

  users-api:
    build: ./users-api
    container_name: todo-users-api
    ports:
      - "8083:8083"  # Added port mapping
    environment:
      - SERVER_PORT=8083
      - JWT_SECRET=myfancysecret
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/users_db?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    depends_on:
      - mysql
    networks:
      - todo-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users.rule=Host(`users.localhost`)"
      - "traefik.http.routers.users.entrypoints=websecure"
      - "traefik.http.routers.users.tls.certresolver=myresolver"
      - "traefik.http.services.users.loadbalancer.server.port=8083"

  log-message-processor:
    build: ./log-message-processor
    container_name: todo-log-processor
    environment:
      - REDIS_HOST=redis  # Changed from redis-queue to match service name
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    depends_on:
      - redis
    networks:
      - todo-network

  redis:
    image: redis:7-alpine
    container_name: todo-redis
    networks:
      - todo-network

  postgres:
    image: postgres:15-alpine
    container_name: todo-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auth_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - todo-network

  mongodb:
    image: mongo:4.4
    container_name: todo-mongodb
    volumes:
      - mongodb_data:/data/db
    networks:
      - todo-network

  mysql:
    image: mysql:8
    container_name: todo-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=users_db
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - todo-network
